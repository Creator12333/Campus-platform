{"version":3,"sources":["frac.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["/* frac.js (C) 2012-present SheetJS -- http://sheetjs.com */\nvar frac = function frac(x, D, mixed) {\n  var n1 = Math.floor(x), d1 = 1;\n  var n2 = n1+1, d2 = 1;\n  if(x !== n1) while(d1 <= D && d2 <= D) {\n    var m = (n1 + n2) / (d1 + d2);\n    if(x === m) {\n      if(d1 + d2 <= D) { d1+=d2; n1+=n2; d2=D+1; }\n      else if(d1 > d2) d2=D+1;\n      else d1=D+1;\n      break;\n    }\n    else if(x < m) { n2 = n1+n2; d2 = d1+d2; }\n    else { n1 = n1+n2; d1 = d1+d2; }\n  }\n  if(d1 > D) { d1 = d2; n1 = n2; }\n  if(!mixed) return [0, n1, d1];\n  var q = Math.floor(n1/d1);\n  return [q, n1 - q*d1, d1];\n};\nfrac.cont = function cont(x, D, mixed) {\n  var sgn = x < 0 ? -1 : 1;\n  var B = x * sgn;\n  var P_2 = 0, P_1 = 1, P = 0;\n  var Q_2 = 1, Q_1 = 0, Q = 0;\n  var A = Math.floor(B);\n  while(Q_1 < D) {\n    A = Math.floor(B);\n    P = A * P_1 + P_2;\n    Q = A * Q_1 + Q_2;\n    if((B - A) < 0.00000005) break;\n    B = 1 / (B - A);\n    P_2 = P_1; P_1 = P;\n    Q_2 = Q_1; Q_1 = Q;\n  }\n  if(Q > D) { if(Q_1 > D) { Q = Q_2; P = P_2; } else { Q = Q_1; P = P_1; } }\n  if(!mixed) return [0, sgn * P, Q];\n  var q = Math.floor(sgn * P/Q);\n  return [q, sgn*P - q*Q, Q];\n};\n// eslint-disable-next-line no-undef\nif(typeof module !== 'undefined' && typeof DO_NOT_EXPORT_FRAC === 'undefined') module.exports = frac;\n"]}