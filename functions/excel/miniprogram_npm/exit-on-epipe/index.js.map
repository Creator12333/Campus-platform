{"version":3,"sources":["exit-on-epipe.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["/* exit-on-epipe.js (C) 2015-present SheetJS -- http://sheetjs.com */\n/* vim: set ts=2: */\n/*jshint eqnull:true, node:true */\nvar eoepipe = function eoepipeit(S/*:events$EventEmitter*/, bail/*:?()=>any*/) {\n\tif(!S || !S.on) return;\n\tif(!bail && typeof process !== 'undefined') bail = process.exit;\n\tvar eoe = function eoeit(err/*:ErrnoError*/) {\n\t\tif(err.code === 'EPIPE' || err.errno === /*EPIPE*/32) { if(bail) bail(); else return; }\n\t\tvar cnt = S.listenerCount ? S.listenerCount('error') : S.listeners('error').length;\n\t\tif(cnt == 1) {\n\t\t\tS.removeListener('error', eoe);\n\t\t\tS.emit('error', err);\n\t\t\tS.on('error', eoe);\n\t\t}\n\t};\n\tS.on('error', eoe);\n};\n\nif(typeof module !== 'undefined') module.exports = eoepipe;\nif(typeof process !== 'undefined') eoepipe(process.stdout);\n"]}