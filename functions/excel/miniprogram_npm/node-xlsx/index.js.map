{"version":3,"sources":["index.js","helpers.js","workbook.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.parse = parse;\nexports.build = build;\n\nvar _xlsx = require('xlsx');\n\nvar _xlsx2 = _interopRequireDefault(_xlsx);\n\nvar _bufferFrom = require('buffer-from');\n\nvar _bufferFrom2 = _interopRequireDefault(_bufferFrom);\n\nvar _helpers = require('./helpers');\n\nvar _workbook = require('./workbook');\n\nvar _workbook2 = _interopRequireDefault(_workbook);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction parse(mixed) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var workSheet = _xlsx2.default[(0, _helpers.isString)(mixed) ? 'readFile' : 'read'](mixed, options);\n  return Object.keys(workSheet.Sheets).map(function (name) {\n    var sheet = workSheet.Sheets[name];\n    return { name: name, data: _xlsx2.default.utils.sheet_to_json(sheet, { header: 1, raw: options.raw !== false }) };\n  });\n}\n\nfunction build(worksheets) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var defaults = {\n    bookType: 'xlsx',\n    bookSST: false,\n    type: 'binary'\n  };\n  var workBook = new _workbook2.default();\n  worksheets.forEach(function (worksheet) {\n    var sheetName = worksheet.name || 'Sheet';\n    var sheetOptions = worksheet.options || {};\n    var sheetData = (0, _helpers.buildSheetFromMatrix)(worksheet.data || [], _extends({}, options, sheetOptions));\n    workBook.SheetNames.push(sheetName);\n    workBook.Sheets[sheetName] = sheetData;\n  });\n  var excelData = _xlsx2.default.write(workBook, Object.assign({}, defaults, options));\n  return excelData instanceof Buffer ? excelData : (0, _bufferFrom2.default)(excelData, 'binary');\n}\n\nexports.default = { parse: parse, build: build };\n//# sourceMappingURL=index.js.map","\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isCellDescriptor = exports.isObject = exports.isString = exports.isNumber = exports.isBoolean = exports.buildSheetFromMatrix = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _xlsx = require('xlsx');\n\nvar _xlsx2 = _interopRequireDefault(_xlsx);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar isBoolean = function isBoolean(maybeBoolean) {\n  return typeof maybeBoolean === 'boolean';\n};\nvar isNumber = function isNumber(maybeNumber) {\n  return typeof maybeNumber === 'number';\n};\nvar isString = function isString(maybeString) {\n  return typeof maybeString === 'string';\n};\nvar isObject = function isObject(maybeObject) {\n  return maybeObject !== null && (typeof maybeObject === 'undefined' ? 'undefined' : _typeof(maybeObject)) === 'object';\n};\nvar isCellDescriptor = function isCellDescriptor(maybeCell) {\n  return isObject(maybeCell) && 'v' in maybeCell;\n};\n\nvar originDate = new Date(Date.UTC(1899, 11, 30));\n\nvar buildExcelDate = function buildExcelDate(value, is1904) {\n  var epoch = Date.parse(value + (is1904 ? 1462 : 0));\n  return (epoch - originDate) / 864e5;\n};\n\nvar buildSheetFromMatrix = function buildSheetFromMatrix(data) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var workSheet = {};\n  var range = { s: { c: 1e7, r: 1e7 }, e: { c: 0, r: 0 } };\n\n  if (!Array.isArray(data)) throw new Error('sheet data is not array');\n\n  for (var R = 0; R !== data.length; R += 1) {\n    for (var C = 0; C !== data[R].length; C += 1) {\n      if (!Array.isArray(data[R])) throw new Error(R + 'th row data is not array');\n\n      if (range.s.r > R) range.s.r = R;\n      if (range.s.c > C) range.s.c = C;\n      if (range.e.r < R) range.e.r = R;\n      if (range.e.c < C) range.e.c = C;\n      if (data[R][C] === null) {\n        continue; // eslint-disable-line\n      }\n      var cell = isCellDescriptor(data[R][C]) ? data[R][C] : { v: data[R][C] };\n      var cellRef = _xlsx2.default.utils.encode_cell({ c: C, r: R });\n      if (isNumber(cell.v)) {\n        cell.t = 'n';\n      } else if (isBoolean(cell.v)) {\n        cell.t = 'b';\n      } else if (cell.v instanceof Date) {\n        cell.t = 'n';\n        cell.v = buildExcelDate(cell.v);\n        cell.z = cell.z || _xlsx2.default.SSF._table[14]; // eslint-disable-line no-underscore-dangle\n\n        /* eslint-disable spaced-comment, no-trailing-spaces */\n        /***\n         * Allows for an non-abstracted representation of the data\n         * \n         * example: {t:'n', z:10, f:'=AVERAGE(A:A)'}\n         * \n         * Documentation:\n         * - Cell Object: https://sheetjs.gitbooks.io/docs/#cell-object\n         * - Data Types: https://sheetjs.gitbooks.io/docs/#data-types\n         * - Format: https://sheetjs.gitbooks.io/docs/#number-formats\n         **/\n        /* eslint-disable spaced-comment, no-trailing-spaces */\n      } else if (isObject(cell.v)) {\n        cell.t = cell.v.t;\n        cell.f = cell.v.f;\n        cell.z = cell.v.z;\n      } else {\n        cell.t = 's';\n      }\n      if (isNumber(cell.z)) cell.z = _xlsx2.default.SSF._table[cell.z]; // eslint-disable-line no-underscore-dangle\n      workSheet[cellRef] = cell;\n    }\n  }\n  if (range.s.c < 1e7) {\n    workSheet['!ref'] = _xlsx2.default.utils.encode_range(range);\n  }\n  if (options['!cols']) {\n    workSheet['!cols'] = options['!cols'];\n  }\n  if (options['!merges']) {\n    workSheet['!merges'] = options['!merges'];\n  }\n  return workSheet;\n};\n\nexports.buildSheetFromMatrix = buildSheetFromMatrix;\nexports.isBoolean = isBoolean;\nexports.isNumber = isNumber;\nexports.isString = isString;\nexports.isObject = isObject;\nexports.isCellDescriptor = isCellDescriptor;\n//# sourceMappingURL=helpers.js.map","\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Workbook = function Workbook() {\n  _classCallCheck(this, Workbook);\n\n  this.SheetNames = [];\n  this.Sheets = {};\n};\n\nexports.default = Workbook;\n//# sourceMappingURL=workbook.js.map"]}